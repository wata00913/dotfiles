

[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
  set background=dark
'''

[[plugins]]
repo = 'challenger-deep-theme/vim'

[[plugins]]
repo = 'doums/darcula'

[[plugins]]
repo = 'thinca/vim-qfreplace'

#deinalay.tomlで設定するとplenaryがnot found(checkhealth)で読み込まれない
[[plugins]]
repo='nvim-lua/plenary.nvim'

[[plugins]]
repo='nvim-telescope/telescope.nvim'
depends='nvim-lua/plenary.nvim'
hook_add = '''
nnoremap <silent> <Space>tf <cmd>Telescope find_files<CR>
nnoremap <silent> <Space>tg <cmd>Telescope grep_string<CR>
nnoremap <silent> <Space>tl <cmd>Telescope live_grep<CR>
nnoremap <silent> <Space>tb <cmd>Telescope buffer<CR>
'''

[[plugins]]
repo = 'kana/vim-submode'
hook_add = '''
  set background=dark
   call submode#enter_with('window_move', 'n', '', 's>', '<C-w>>')
   call submode#enter_with('window_move', 'n', '', 's<', '<C-w><')
   call submode#enter_with('window_move', 'n', '', 's+', '<C-w>+')
   call submode#enter_with('window_move', 'n', '', 's-', '<C-w>-')
   call submode#map('window_move', 'n', '', '>', '<C-w>>')
   call submode#map('window_move', 'n', '', '<', '<C-w><')
   call submode#map('window_move', 'n', '', '+', '<C-w>+')
   call submode#map('window_move', 'n', '', '-', '<C-w>-')

   call submode#enter_with('bufmove', 'n', '', '<Space>sb', '<Nop>')
   call submode#map('bufmove', 'n', '', 'j', '<C-w>j')
   call submode#map('bufmove', 'n', '', 'k', '<C-w>k')
   call submode#map('bufmove', 'n', '', 'l', '<C-w>l')
   call submode#map('bufmove', 'n', '', 'h', '<C-w>h')

   call submode#enter_with('tabmove', 'n', '', '<Space>st', '<Nop>')
   call submode#map('bufmove', 'n', '', 'n', ':tabnext<CR>')
   call submode#map('bufmove', 'n', '', 'p', ':tabprevious<CR>')
'''

[[plugins]]
repo="honza/vim-snippets"

[[plugins]]
repo='lambdalisue/fern.vim'
rev='main'
hook_add='''
let g:fern_disable_startup_warnings = 1
nnoremap <silent> <Space>ff :Fern . -drawer<CR>
'''

[[plugins]]
repo='w0rp/ale'
hook_add='''
 nmap <silent> [ale]p <Plug>(ale_previous_error)
 nmap <silent> [ale]n <Plug>(ale_next_error)
 let g:ale_lint_on_text_changed = 0 
 let g:ale_sign_error ='✖'
 let g:ale_sign_warning = '⚠' 
 let g:ale_fix_on_save = 1
 let g:ale_fixers = {
     \'java':['google_java_format'],
     \}
 function! s:execute_path() abort
	if has('unix')
	    let s:php_bin_path = expand($HOME . "/.composer/vendor/bin")
        endif
	return s:php_bin_path
 endfunction 
 let s:php_linter_path = s:execute_path()
 let g:ale_php_phpmd_executable = s:php_linter_path . "/phpmd"
 let g:ale_php_phpcs_executable = s:php_linter_path . "/phpcs"
 let g:ale_linters = { 
     \'python':['flake8'],
     \'php':['phpcs', 'phpmd', 'php'],
     \}
'''

[[plugins]]
repo='vim-airline/vim-airline'
hook_add='''
    let g:airline#extensions#tabline#buffer_idx_mode = 1
    let g:airline#extensions#tabline#enabled = 1
    nmap <Space>1 <Plug>AirlineSelectTab1
    nmap <Space>2 <Plug>AirlineSelectTab2
    nmap <Space>3 <Plug>AirlineSelectTab3
    nmap <Space>4 <Plug>AirlineSelectTab4
    nmap <Space>5 <Plug>AirlineSelectTab5
    nmap <Space>6 <Plug>AirlineSelectTab6
    nmap <Space>7 <Plug>AirlineSelectTab7
    nmap <Space>8 <Plug>AirlineSelectTab8
    nmap <Space>9 <Plug>AirlineSelectTab9
    nmap <Space>h <Plug>AirlineSelectPrevTab
    nmap <Space>l <Plug>AirlineSelectNextTab
'''

[[plugins]]
repo = 'lighttiger2505/gtags.vim'
hook_add = '''
    " Options
    let g:Gtags_Auto_Map = 0
    let g:Gtags_OpenQuickfixWindow = 1
    " Keymap
    " Show definetion of function cousor word on quickfix
    nnoremap <silent> <Space>g] :<C-u>exe("Gtags ".expand('<cword>'))<CR>
    " Show reference of cousor word on quickfix
    nnoremap <silent> <Space>g[ :<C-u>exe("Gtags -r ".expand('<cword>'))<CR>
'''

# git plugin
[[plugins]]
repo = "airblade/vim-gitgutter"

[[plugins]]
repo = "tpope/vim-fugitive"

[[plugins]]
repo = "tpope/vim-surround"


[[plugins]]
repo = "scrooloose/nerdcommenter"

# japanese
[[plugins]]
repo = "haya14busa/vim-migemo"

[[plugins]]
repo = "haya14busa/incsearch.vim"
hook_add = '''
    map /  <Plug>(incsearch-forward)
		map ?  <Plug>(incsearch-backward)
		map g/ <Plug>(incsearch-stay)
'''

[[plugins]]
repo = "haya14busa/incsearch-migemo.vim"
"depends = 'incsearch.vim'
hook_add = '''
    map m/ <Plug>(incsearch-migemo-/)
    map m? <Plug>(incsearch-migemo-?)
    map mg/ <Plug>(incsearch-migemo-stay)
'''
